resource "aws_cloudformation_stack" "tfer--pipeline-002D-eks-002D-iam-002D-m4je2o0jwty6e" {
  capabilities     = ["CAPABILITY_IAM", "CAPABILITY_NAMED_IAM"]
  disable_rollback = "true"
  name             = "pipeline-eks-iam-m4je2o0jwty6e"

  outputs = {
    ClusterRoleArn      = "arn:aws:iam::377481363432:role/pipeline-eks-iam-m4je2o0jwty6e-ClusterRole-NXW9OZ2CSKQ"
    ClusterUserArn      = "arn:aws:iam::377481363432:user/m4je2o0jwty6e"
    NodeInstanceRoleArn = "arn:aws:iam::377481363432:role/pipeline-eks-iam-m4je2o0jwty6e-NodeInstanceRole-4MBONOX6FE02"
    NodeInstanceRoleId  = "pipeline-eks-iam-m4je2o0jwty6e-NodeInstanceRole-4MBONOX6FE02"
  }

  tags = {
    banzaicloud-pipeline-cluster-name = "m4je2o0jwty6e"
    banzaicloud-pipeline-managed      = "true"
    banzaicloud-pipeline-stack-type   = "vpc"
    banzaicloud-pipeline-uuid         = "e9f93691-caef-4f62-93c3-fc735a79beb5"
  }

  template_body      = "AWSTemplateFormatVersion: '2010-09-09'\nDescription: 'Amazon EKS IAM'\n\nParameters:\n  ClusterName:\n    Type: String\n    Description: The name of the EKS cluster.\n\n  UserId:\n    Type: String\n    Description: The user ID provided to set as cluster admin.\n    Default: \"\"\n\n  UserPath:\n    Type: String\n    Description: The path of the provided user to set as cluster admin.\n    Default: \"/\"\n\n  ClusterRoleId:\n    Type: String\n    Description: The role ID provided to set for the EKS cluster.\n    Default: \"\"\n\n  ClusterRolePath:\n    Type: String\n    Description: The path of the provided role to set for the EKS cluster.\n    Default: \"/\"\n\n  NodeInstanceRoleId:\n    Type: String\n    Description: The role ID provided to set for the EKS nodes.\n    Default: \"\"\n\n  NodeInstanceRolePath:\n    Type: String\n    Description: The path of the provided role to set for the EKS nodes.\n    Default: \"/\"\n\nConditions:\n  CreateUser: !Equals [ !Ref UserId, \"\" ]\n  CreateClusterRole: !Equals [ !Ref ClusterRoleId, \"\" ]\n  CreateNodeInstanceRole: !Equals [ !Ref NodeInstanceRoleId, \"\" ]\n\nResources:\n  ClusterUser:\n    Type: AWS::IAM::User\n    Condition: CreateUser\n    Properties:\n      UserName: !Sub \"${ClusterName}\"\n\n  ClusterRole:\n    Type: AWS::IAM::Role\n    Condition: CreateClusterRole\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n        - Effect: Allow\n          Principal:\n            Service:\n            - eks.amazonaws.com\n          Action:\n          - sts:AssumeRole\n      Path: \"/\"\n      ManagedPolicyArns:\n        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy\n        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy\n      MaxSessionDuration: 3600\n\n  NodeInstanceRole:\n    Type: AWS::IAM::Role\n    Condition: CreateNodeInstanceRole\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n        - Effect: Allow\n          Principal:\n            Service:\n            - ec2.amazonaws.com\n          Action:\n          - sts:AssumeRole\n      Path: \"/\"\n      ManagedPolicyArns:\n        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\n        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\n        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\n      Policies:\n        -\n          PolicyName: NodePolicy\n          PolicyDocument:\n            Version: '2012-10-17'\n            Statement:\n            -\n              Effect: \"Allow\"\n              Action:\n              - ec2:Describe*\n              - ecr:GetAuthorizationToken\n              - ecr:BatchCheckLayerAvailability\n              - ecr:GetDownloadUrlForLayer\n              - ecr:GetRepositoryPolicy\n              - ecr:DescribeRepositories\n              - ecr:ListImages\n              - ecr:BatchGetImage\n              - s3:ListBucket\n              - s3:GetObject\n              - s3:PutObject\n              - s3:DeleteObject\n              - autoscaling:DescribeAutoScalingGroups\n              - autoscaling:UpdateAutoScalingGroup\n              - autoscaling:DescribeAutoScalingInstances\n              - autoscaling:DescribeTags\n              - autoscaling:DescribeLaunchConfigurations\n              - autoscaling:SetDesiredCapacity\n              - autoscaling:TerminateInstanceInAutoScalingGroup\n              - autoscaling:PutLifecycleHook\n              - autoscaling:RecordLifecycleActionHeartbeat\n              - autoscaling:DescribeLifecycleHooks\n              - autoscaling:CompleteLifecycleAction\n              - autoscaling:DeleteLifecycleHook\n              - autoscaling:DetachInstances\n              Resource: \"*\"\n\nOutputs:\n  ClusterRoleArn:\n    Description: The ClusterRole ARN\n    Value: !If [ CreateClusterRole, !GetAtt ClusterRole.Arn, !Sub \"arn:aws:iam::${AWS::AccountId}:role${ClusterRolePath}${ClusterRoleId}\" ]\n\n  NodeInstanceRoleId:\n    Description: The NodeInstanceRole ID\n    Value: !If [ CreateNodeInstanceRole, !Ref NodeInstanceRole, !Sub \"${NodeInstanceRoleId}\" ]\n\n  NodeInstanceRoleArn:\n    Description: The NodeInstanceRole ARN\n    Value: !If [ CreateNodeInstanceRole, !GetAtt NodeInstanceRole.Arn, !Sub \"arn:aws:iam::${AWS::AccountId}:role${NodeInstanceRolePath}${NodeInstanceRoleId}\" ]\n\n  ClusterUserArn:\n    Description: Cluster user's ARN\n    Value: !If [ CreateUser, !GetAtt ClusterUser.Arn, !Sub \"arn:aws:iam::${AWS::AccountId}:user${UserPath}${UserId}\" ]\n"
  timeout_in_minutes = "10"
}

resource "aws_cloudformation_stack" "tfer--pipeline-002D-eks-002D-m4je2o0jwty6e" {
  disable_rollback = "true"
  name             = "pipeline-eks-m4je2o0jwty6e"

  outputs = {
    NodeSecurityGroup = "sg-007d703253c235022"
    RouteTableId      = "rtb-0b3d3913a72b383ce"
    SecurityGroups    = "sg-0d55a6c7ed9fd45ec"
    VpcId             = "vpc-063de654fdde6412d"
  }

  tags = {
    banzaicloud-pipeline-cluster-name = "m4je2o0jwty6e"
    banzaicloud-pipeline-managed      = "true"
    banzaicloud-pipeline-stack-type   = "vpc"
    banzaicloud-pipeline-uuid         = "e9f93691-caef-4f62-93c3-fc735a79beb5"
  }

  template_body      = "---\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: 'Amazon EKS VPC'\n\nParameters:\n\n  ClusterName:\n    Description: The cluster name provided when the cluster was created.  If it is incorrect, nodes will not be able to join the cluster.\n    Type: String\n\n  VpcId:\n    Type: String\n    Description: The VPC to be used instead of creating a new one.\n    Default: \"\"\n\n  RouteTableId:\n    Type: String\n    Default: \"\"\n    Description: Id of the RouteTable of the VPC to be used by subnets. This is used only when subnets are created into existing VPC.\n\n  VpcBlock:\n    Type: String\n    Default: 192.168.0.0/16\n    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range. Used only when new VPC is created.\n\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      -\n        Label:\n          default: \"EKS Cluster\"\n        Parameters:\n          - ClusterName\n      -\n        Label:\n          default: \"Worker Network Configuration\"\n        Parameters:\n          - VpcId\n          - RouteTableId\n          - VpcBlock\n\nConditions:\n  CreateVpc: !Equals [ !Ref VpcId, \"\" ]\n\nResources:\n  VPC:\n    Type: \"AWS::EC2::VPC\"\n    Condition: CreateVpc\n    Properties:\n      CidrBlock:  !Ref VpcBlock\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n      - Key: Name\n        Value: !Sub '${AWS::StackName}-VPC'\n\n  InternetGateway:\n    Type: \"AWS::EC2::InternetGateway\"\n    Condition: CreateVpc\n\n  VPCGatewayAttachment:\n    Type: \"AWS::EC2::VPCGatewayAttachment\"\n    Condition: CreateVpc\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n\n  RouteTable:\n    Type: \"AWS::EC2::RouteTable\"\n    Condition: CreateVpc\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Public Subnets\n      - Key: Network\n        Value: Public\n\n  Route:\n    DependsOn: VPCGatewayAttachment\n    Condition: CreateVpc\n    Type: \"AWS::EC2::Route\"\n    Properties:\n      RouteTableId: !Ref RouteTable\n      DestinationCidrBlock: 0.0.0.0/0\n      GatewayId: !Ref InternetGateway\n\n  ControlPlaneSecurityGroup:\n    Type: \"AWS::EC2::SecurityGroup\"\n    Properties:\n      GroupDescription: Cluster communication with worker nodes\n      VpcId: !If [ CreateVpc, !Ref VPC,  !Ref VpcId ]\n\n  NodeSecurityGroup:\n    Type: \"AWS::EC2::SecurityGroup\"\n    Properties:\n      GroupDescription: Security group for all nodes in the cluster\n      VpcId: !If [ CreateVpc,  !Ref VPC,  !Ref VpcId ]\n      Tags:\n      - Key: !Sub \"kubernetes.io/cluster/${ClusterName}\"\n        Value: 'owned'\n\nOutputs:\n  SecurityGroups:\n    Description: Security group for the cluster control plane communication with worker nodes\n    Value: !Join [ \",\", [ !Ref ControlPlaneSecurityGroup ] ]\n\n  NodeSecurityGroup:\n    Description: Security group for all nodes in the cluster\n    Value:  !Ref NodeSecurityGroup\n\n  VpcId:\n    Description: The VPC Id\n    Value: !If [ CreateVpc, !Ref VPC,  !Ref VpcId ]\n\n  RouteTableId:\n      Description: Route table Id\n      Value: !If [ CreateVpc, !Ref RouteTable,  !Ref RouteTableId ]\n"
  timeout_in_minutes = "10"
}

resource "aws_cloudformation_stack" "tfer--pipeline-002D-eks-002D-nodepool-002D-m4je2o0jwty6e-002D-pool1" {
  capabilities     = ["CAPABILITY_IAM"]
  disable_rollback = "true"
  name             = "pipeline-eks-nodepool-m4je2o0jwty6e-pool1"

  tags = {
    banzaicloud-pipeline-cluster-name = "m4je2o0jwty6e"
    banzaicloud-pipeline-managed      = "true"
    banzaicloud-pipeline-stack-type   = "nodepool"
    banzaicloud-pipeline-uuid         = "e9f93691-caef-4f62-93c3-fc735a79beb5"
  }

  template_body      = "---\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: 'Amazon EKS - Node Group'\n\nParameters:\n\n  KeyName:\n    Description: The EC2 Key Pair to allow SSH access to the instances\n    Type: AWS::EC2::KeyPair::KeyName\n\n  NodeImageId:\n    Type: AWS::EC2::Image::Id\n    Description: AMI id for the node instances.\n\n  NodeInstanceType:\n    Description: EC2 instance type for the node instances\n    Type: String\n    Default: t2.medium\n    AllowedValues:\n    - t2.small\n    - t2.medium\n    - t2.large\n    - t2.xlarge\n    - t2.2xlarge\n    - t3.nano\n    - t3.micro\n    - t3.small\n    - t3.medium\n    - t3.large\n    - t3.xlarge\n    - t3.2xlarge\n    - m3.medium\n    - m3.large\n    - m3.xlarge\n    - m3.2xlarge\n    - m4.large\n    - m4.xlarge\n    - m4.2xlarge\n    - m4.4xlarge\n    - m4.10xlarge\n    - m5.large\n    - m5.xlarge\n    - m5.2xlarge\n    - m5.4xlarge\n    - m5.12xlarge\n    - m5.24xlarge\n    - c4.large\n    - c4.xlarge\n    - c4.2xlarge\n    - c4.4xlarge\n    - c4.8xlarge\n    - c5.large\n    - c5.xlarge\n    - c5.2xlarge\n    - c5.4xlarge\n    - c5.9xlarge\n    - c5.18xlarge\n    - i3.large\n    - i3.xlarge\n    - i3.2xlarge\n    - i3.4xlarge\n    - i3.8xlarge\n    - i3.16xlarge\n    - r3.xlarge\n    - r3.2xlarge\n    - r3.4xlarge\n    - r3.8xlarge\n    - r4.large\n    - r4.xlarge\n    - r4.2xlarge\n    - r4.4xlarge\n    - r4.8xlarge\n    - r4.16xlarge\n    - x1.16xlarge\n    - x1.32xlarge\n    - p2.xlarge\n    - p2.8xlarge\n    - p2.16xlarge\n    - p3.2xlarge\n    - p3.8xlarge\n    - p3.16xlarge\n    - r5.large\n    - r5.xlarge\n    - r5.2xlarge\n    - r5.4xlarge\n    - r5.12xlarge\n    - r5.24xlarge\n    - r5d.large\n    - r5d.xlarge\n    - r5d.2xlarge\n    - r5d.4xlarge\n    - r5d.12xlarge\n    - r5d.24xlarge\n    - z1d.large\n    - z1d.xlarge\n    - z1d.2xlarge\n    - z1d.3xlarge\n    - z1d.6xlarge\n    - z1d.12xlarge\n    ConstraintDescription: must be a valid EC2 instance type\n\n  NodeAutoScalingGroupMinSize:\n    Type: Number\n    Description: Minimum size of Node Group ASG.\n    Default: 1\n\n  NodeAutoScalingGroupMaxSize:\n    Type: Number\n    Description: Maximum size of Node Group ASG.\n    Default: 3\n\n  NodeAutoScalingInitSize:\n    Type: Number\n    Description: The initial size of Node Group ASG.\n    Default: 1\n\n  NodeVolumeSize:\n    Type: Number\n    Description: Node volume size\n    Default: 20\n\n  NodeSpotPrice:\n    Type: String\n    Description: The spot price for this ASG\n\n  ClusterName:\n    Description: The cluster name provided when the cluster was created.  If it is incorrect, nodes will not be able to join the cluster.\n    Type: String\n\n  BootstrapArguments:\n    Description: Arguments to pass to the bootstrap script. See files/bootstrap.sh in https://github.com/awslabs/amazon-eks-ami\n    Default: \"\"\n    Type: String\n\n  NodeGroupName:\n    Description: Unique identifier for the Node Group.\n    Type: String\n\n  ClusterControlPlaneSecurityGroup:\n    Description: The security group of the cluster control plane.\n    Type: AWS::EC2::SecurityGroup::Id\n\n  NodeSecurityGroup:\n    Description: Security group for all nodes in the cluster.\n    Type: AWS::EC2::SecurityGroup::Id\n\n  VpcId:\n    Description: The VPC of the worker instances\n    Type: AWS::EC2::VPC::Id\n\n  Subnets:\n    Description: The subnets where workers can be created.\n    Type: List<AWS::EC2::Subnet::Id>\n\n  NodeInstanceRoleId:\n    Description: The role for node IAM profile\n    Type: String\n\n  ClusterAutoscalerEnabled:\n    Description: Enable Cluster Autoscaler (true/false)\n    Type: String\n\n  TerminationDetachEnabled:\n    Description: Enable detachment from ASG at instance termination (true/false)\n    Type: String\n\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      -\n        Label:\n          default: \"EKS Cluster\"\n        Parameters:\n          - ClusterName\n          - ClusterControlPlaneSecurityGroup\n          - NodeSecurityGroup\n      -\n        Label:\n          default: \"Worker Node Configuration\"\n        Parameters:\n          - NodeGroupName\n          - NodeAutoScalingGroupMinSize\n          - NodeAutoScalingGroupMaxSize\n          - NodeAutoScalingInitSize\n          - NodeVolumeSize\n          - NodeSpotPrice\n          - NodeInstanceType\n          - NodeImageId\n          - KeyName\n          - BootstrapArguments\n      -\n        Label:\n          default: \"Worker Network Configuration\"\n        Parameters:\n          - VpcId\n          - Subnets\nConditions:\n  IsSpotInstance: !Not [ !Equals [ !Ref NodeSpotPrice, \"\" ] ]\n  AutoscalerEnabled:  !Equals [ !Ref ClusterAutoscalerEnabled, \"true\" ]\n\nResources:\n  NodeInstanceProfile:\n    Type: AWS::IAM::InstanceProfile\n    Properties:\n      Path: \"/\"\n      Roles:\n      - !Ref NodeInstanceRoleId\n\n  NodeSecurityGroupIngress:\n    Type: AWS::EC2::SecurityGroupIngress\n    Properties:\n      Description: Allow node to communicate with each other\n      GroupId: !Ref NodeSecurityGroup\n      SourceSecurityGroupId: !Ref NodeSecurityGroup\n      IpProtocol: '-1'\n      FromPort: 0\n      ToPort: 65535\n\n  NodeSecurityGroupFromControlPlaneIngress:\n    Type: AWS::EC2::SecurityGroupIngress\n    Properties:\n      Description: Allow worker Kubelets and pods to receive communication from the cluster control plane\n      GroupId: !Ref NodeSecurityGroup\n      SourceSecurityGroupId: !Ref ClusterControlPlaneSecurityGroup\n      IpProtocol: '-1'\n      FromPort: 0\n      ToPort: 65535\n\n  ControlPlaneEgressToNodeSecurityGroup:\n    Type: AWS::EC2::SecurityGroupEgress\n    Properties:\n      Description: Allow the cluster control plane to communicate with worker Kubelet and pods\n      GroupId: !Ref ClusterControlPlaneSecurityGroup\n      DestinationSecurityGroupId: !Ref NodeSecurityGroup\n      IpProtocol: '-1'\n      FromPort: 0\n      ToPort: 65535\n\n  ClusterControlPlaneSecurityGroupIngress:\n    Type: AWS::EC2::SecurityGroupIngress\n    Properties:\n      Description: Allow pods to communicate with the cluster API Server\n      GroupId: !Ref ClusterControlPlaneSecurityGroup\n      SourceSecurityGroupId: !Ref NodeSecurityGroup\n      IpProtocol: tcp\n      ToPort: 443\n      FromPort: 443\n\n  NodeSecurityGroupSsh:\n    Type: AWS::EC2::SecurityGroupIngress\n    Properties:\n      Description: Allow SSH access to node\n      GroupId: !Ref NodeSecurityGroup\n      CidrIp: '0.0.0.0/0'\n      IpProtocol: tcp\n      ToPort: 22\n      FromPort: 22\n\n  NodeGroup:\n    Type: AWS::AutoScaling::AutoScalingGroup\n    Properties:\n      DesiredCapacity: !Ref NodeAutoScalingInitSize\n      LaunchConfigurationName: !Ref NodeLaunchConfig\n      MinSize: !Ref NodeAutoScalingGroupMinSize\n      MaxSize: !Ref NodeAutoScalingGroupMaxSize\n      VPCZoneIdentifier:\n        !Ref Subnets\n      Tags:\n      - Key: Name\n        Value: !Sub \"${ClusterName}-${NodeGroupName}\"\n        PropagateAtLaunch: 'true'\n      - Key: !Sub 'kubernetes.io/cluster/${ClusterName}'\n        Value: 'owned'\n        PropagateAtLaunch: 'true'\n      - Key: !If [ AutoscalerEnabled, 'k8s.io/cluster-autoscaler/enabled', 'k8s.io/cluster-autoscaler/disabled' ]\n        Value: 'true'\n        PropagateAtLaunch: 'false'\n      - Key: 'bzc:detach-asg-instance-on-termination'\n        Value: !Sub \"${TerminationDetachEnabled}\"\n        PropagateAtLaunch: 'false'\n\n    UpdatePolicy:\n      AutoScalingRollingUpdate:\n        MinInstancesInService: '1'\n        MaxBatchSize: '1'\n        PauseTime: PT5M\n\n  NodeLaunchConfig:\n    Type: AWS::AutoScaling::LaunchConfiguration\n    Properties:\n      IamInstanceProfile: !Ref NodeInstanceProfile\n      ImageId: !Ref NodeImageId\n      InstanceType: !Ref NodeInstanceType\n      SpotPrice: !If [ IsSpotInstance, !Ref NodeSpotPrice, !Ref \"AWS::NoValue\" ]\n      KeyName: !Ref KeyName\n      SecurityGroups:\n      - !Ref NodeSecurityGroup\n      BlockDeviceMappings:\n        - DeviceName: /dev/xvda\n          Ebs:\n            VolumeSize: !Ref NodeVolumeSize\n            VolumeType: gp2\n            DeleteOnTermination: true\n      UserData:\n        Fn::Base64:\n          !Sub |\n            #!/bin/bash\n            set -o xtrace\n            /etc/eks/bootstrap.sh ${ClusterName} ${BootstrapArguments}\n            /opt/aws/bin/cfn-signal --exit-code $? \\\n                     --stack  ${AWS::StackName} \\\n                     --resource NodeGroup  \\\n                     --region ${AWS::Region}\n"
  timeout_in_minutes = "10"
}

resource "aws_cloudformation_stack" "tfer--pipeline-002D-eks-002D-subnet-002D-m4je2o0jwty6e-002D-192-002D-168-002D-64-002D-0-002D-20" {
  disable_rollback = "true"
  name             = "pipeline-eks-subnet-m4je2o0jwty6e-192-168-64-0-20"

  outputs = {
    SubnetId = "subnet-0dc298e7f9b88c2b0"
  }

  tags = {
    banzaicloud-pipeline-cluster-name = "m4je2o0jwty6e"
    banzaicloud-pipeline-managed      = "true"
    banzaicloud-pipeline-stack-type   = "subnet"
    banzaicloud-pipeline-uuid         = "e9f93691-caef-4f62-93c3-fc735a79beb5"
  }

  template_body      = "---\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: 'Amazon EKS Subnet'\n\nParameters:\n  VpcId:\n    Type: AWS::EC2::VPC::Id\n    Description: The VPC to create the subnet within\n\n  RouteTableId:\n    Type: String\n    Description: The Id of the route table to associate the subnet with\n\n  SubnetBlock:\n    Type: String\n    Default: 192.168.64.0/20\n    Description: CidrBlock for subnet within the VPC\n\n  AvailabilityZoneName:\n    Type: String\n    Description: The AZ of the subnet\n    Default: \"\"\n\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      -\n        Label:\n          default: \"Subnet Configuration\"\n        Parameters:\n          - VpcId\n          - RouteTableId\n          - SubnetBlock\n          - AvailabilityZoneName\nConditions:\n  AZProvided: !Not [!Equals [ !Ref AvailabilityZoneName, \"\" ]]\n\nResources:\n  Subnet:\n    Type: \"AWS::EC2::Subnet\"\n    Properties:\n      AvailabilityZone: !If\n        - AZProvided\n        - !Ref AvailabilityZoneName\n        - !Select\n          - 0\n          - Fn::GetAZs: !Ref 'AWS::Region'\n      CidrBlock: !Ref SubnetBlock\n      VpcId: !Ref VpcId\n      MapPublicIpOnLaunch: true\n      Tags:\n        - Key: Name\n          Value: !Sub \"${AWS::StackName}\"\n  SubnetRouteTableAssociation:\n    Type: \"AWS::EC2::SubnetRouteTableAssociation\"\n    Properties:\n      SubnetId: !Ref Subnet\n      RouteTableId: !Ref RouteTableId\n\nOutputs:\n  SubnetId:\n    Description: The Id of the created subnet\n    Value: !Ref Subnet\n"
  timeout_in_minutes = "10"
}

resource "aws_cloudformation_stack" "tfer--pipeline-002D-eks-002D-subnet-002D-m4je2o0jwty6e-002D-192-002D-168-002D-80-002D-0-002D-20" {
  disable_rollback = "true"
  name             = "pipeline-eks-subnet-m4je2o0jwty6e-192-168-80-0-20"

  outputs = {
    SubnetId = "subnet-0099b3ef85aa62e65"
  }

  tags = {
    banzaicloud-pipeline-cluster-name = "m4je2o0jwty6e"
    banzaicloud-pipeline-managed      = "true"
    banzaicloud-pipeline-stack-type   = "subnet"
    banzaicloud-pipeline-uuid         = "e9f93691-caef-4f62-93c3-fc735a79beb5"
  }

  template_body      = "---\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: 'Amazon EKS Subnet'\n\nParameters:\n  VpcId:\n    Type: AWS::EC2::VPC::Id\n    Description: The VPC to create the subnet within\n\n  RouteTableId:\n    Type: String\n    Description: The Id of the route table to associate the subnet with\n\n  SubnetBlock:\n    Type: String\n    Default: 192.168.64.0/20\n    Description: CidrBlock for subnet within the VPC\n\n  AvailabilityZoneName:\n    Type: String\n    Description: The AZ of the subnet\n    Default: \"\"\n\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      -\n        Label:\n          default: \"Subnet Configuration\"\n        Parameters:\n          - VpcId\n          - RouteTableId\n          - SubnetBlock\n          - AvailabilityZoneName\nConditions:\n  AZProvided: !Not [!Equals [ !Ref AvailabilityZoneName, \"\" ]]\n\nResources:\n  Subnet:\n    Type: \"AWS::EC2::Subnet\"\n    Properties:\n      AvailabilityZone: !If\n        - AZProvided\n        - !Ref AvailabilityZoneName\n        - !Select\n          - 0\n          - Fn::GetAZs: !Ref 'AWS::Region'\n      CidrBlock: !Ref SubnetBlock\n      VpcId: !Ref VpcId\n      MapPublicIpOnLaunch: true\n      Tags:\n        - Key: Name\n          Value: !Sub \"${AWS::StackName}\"\n  SubnetRouteTableAssociation:\n    Type: \"AWS::EC2::SubnetRouteTableAssociation\"\n    Properties:\n      SubnetId: !Ref Subnet\n      RouteTableId: !Ref RouteTableId\n\nOutputs:\n  SubnetId:\n    Description: The Id of the created subnet\n    Value: !Ref Subnet\n"
  timeout_in_minutes = "10"
}
